name: "[Distributed] Build FlashInfer"

jobs:
  configure:
    runs-on: ubuntu-latest

    outputs:
      random: ${{ steps.generate-random.outputs.random }}

    steps:
      - id: generate-random
        name: Generate random value
        run: echo "random=$(openssl rand -hex 3)" >> "$GITHUB_OUTPUT"

  sccache-client:
    needs: configure
    runs-on: ubuntu-latest

    env:
      SCCACHE_DIST_SCHEDULER_URL: http://ppc-${{ needs.configure.outputs.random }}-client:10600
      SCCACHE_GHA_ENABLED: 1
      SCCACHE_RANDOM: ${{ needs.configure.outputs.random }}
      TS_AUTH_KEY: ${{ secrets.TS_AUTH_KEY }}
      TS_HOSTNAME: ppc-${{ needs.configure.outputs.random }}-client

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cleanup
        uses: ./.github/actions/runner-cleanup

      - name: Execute `tailscale` command
        run: scripts/tailscale.sh up --authkey=$TS_AUTH_KEY --hostname=$TS_HOSTNAME --ssh

      - name: Invoke `sccache` action
        uses: mozilla-actions/sccache-action@v0.0.5

      - name: Install `sccache`
        run: scripts/sccache.sh

      - name: Start `sccache-dist scheduler`
        run: scripts/sccache_dist_scheduler.sh

      - name: Wait
        run: sleep 86400

      - if: always()
        name: Execute `tailscale` command
        run: scripts/tailscale.sh logout

  sccache-server:
    needs: configure
    runs-on: ubuntu-latest

    env:
      SCCACHE_DIST_SCHEDULER_URL: http://ppc-${{ needs.configure.outputs.random }}-client:10600
      SCCACHE_GHA_ENABLED: 1
      SCCACHE_RANDOM: ${{ needs.configure.outputs.random }}
      TS_AUTH_KEY: ${{ secrets.TS_AUTH_KEY }}
      TS_HOSTNAME: ppc-${{ needs.configure.outputs.random }}-server-${{ matrix.no }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Execute `tailscale` command
        run: scripts/tailscale.sh up --authkey=$TS_AUTH_KEY --hostname=$TS_HOSTNAME --ssh

      - name: Install `sccache`
        run: scripts/sccache.sh

      - name: Start `sccache-dist server`
        run: scripts/sccache_dist_server.sh

      - if: always()
        name: Execute `tailscale` command
        run: scripts/tailscale.sh logout

    strategy:
      fail-fast: false

      matrix:
        no: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]

on:
  workflow_dispatch:
