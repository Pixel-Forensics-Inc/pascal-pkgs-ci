name: "[Distributed] Build vLLM (v0.6.2)"

jobs:
  configure:
    runs-on: ubuntu-latest

    outputs:
      random: ${{ steps.generate-random.outputs.random }}

    steps:
      - id: generate-random
        name: Generate random value
        run: echo "random=$(openssl rand -hex 3)" >> "$GITHUB_OUTPUT"

  sccache-client:
    needs: configure
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SCCACHE_DIST_SCHEDULER_URL: http://ppc-${{ needs.configure.outputs.random }}-client:10600
      SCCACHE_GHA_ENABLED: 1
      TS_AUTH_KEY: ${{ secrets.TS_AUTH_KEY }}
      TS_HOSTNAME: ppc-${{ needs.configure.outputs.random }}-client
      TS_RANDOM: ${{ needs.configure.outputs.random }}
      TS_SERVERCOUNT: 19

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: sccache client
        uses: ./.github/actions/distributed/sccache-client

      - name: Build vLLM wheels
        uses: ./.github/actions/distributed/build-vllm

      - if: always()
        name: sccache client (post)
        uses: ./.github/actions/distributed/sccache-client-post

  sccache-server:
    needs: configure
    runs-on: ubuntu-latest

    env:
      SCCACHE_DIST_SCHEDULER_URL: http://ppc-${{ needs.configure.outputs.random }}-client:10600
      TS_AUTH_KEY: ${{ secrets.TS_AUTH_KEY }}
      TS_HOSTNAME: ppc-${{ needs.configure.outputs.random }}-server-${{ matrix.no }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: sccache server
        uses: ./.github/actions/distributed/sccache-server

    strategy:
      fail-fast: false

      matrix:
        no: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]

  publish:
    needs: sccache-client
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Publish wheels
        uses: ./.github/actions/publish-wheels
        with:
          prefix: vllm_pascal-0.6.2-

on:
  workflow_dispatch:
